name: Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov pytest-asyncio

      - name: Set environment variables
        run: |
          echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV
          echo "MAS_ARENA_TEST_MODE=true" >> $GITHUB_ENV

      - name: Run unit tests
        run: |
          pytest tests/test_agents.py -v --tb=short
          pytest tests/test_evaluators.py -v --tb=short
          pytest tests/test_benchmark_runner.py -v --tb=short

      - name: Run tests with coverage
        run: |
          pytest tests/ --cov=mas_arena --cov-report=xml --cov-report=term-missing -v

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ruff

      - name: Run ruff linting
        run: |
          python -m ruff check mas_arena/ --exit-zero

      - name: Check code formatting with ruff
        run: |
          python -m ruff format --check mas_arena/ || echo "Code formatting issues found, but not failing CI"
