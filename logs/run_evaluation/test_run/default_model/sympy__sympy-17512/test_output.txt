/eval.sh: line 2: set: pipefail: invalid option name
+ source $'/opt/miniconda3/bin/activate\r'
/eval.sh: line 3: /opt/miniconda3/bin/activate: No such file or directory
+ conda activate $'testbed\r'

CondaError: Run 'conda init' before 'conda activate'

+ cd $'/testbed\r'
/eval.sh: line 5: cd: $'/testbed\r': No such file or directory
+ git config --global --add safe.directory $'/testbed\r'
+ cd $'/testbed\r'
/eval.sh: line 7: cd: $'/testbed\r': No such file or directory
+ git $'status\r'
git: 'status' is not a git command. See 'git --help'.

The most similar command is
	status
+ git $'show\r'
git: 'show' is not a git command. See 'git --help'.

The most similar command is
	show
+ git -c core.fileMode=false diff $'3d8a56298c71a67dedb0472f94e3746d04ddd117\r'
fatal: ambiguous argument '3d8a56298c71a67dedb0472f94e3746d04ddd117?': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git <command> [<revision>...] -- [<file>...]'
+ source $'/opt/miniconda3/bin/activate\r'
/eval.sh: line 11: /opt/miniconda3/bin/activate: No such file or directory
+ conda activate $'testbed\r'

CondaError: Run 'conda init' before 'conda activate'

+ python -m pip install -e $'.\r'
ERROR: . is not a valid editable requirement. It should either be a path to a local project or a VCS URL (beginning with bzr+http, bzr+https, bzr+ssh, bzr+sftp, bzr+ftp, bzr+lp, bzr+file, git+http, git+https, git+ssh, git+git, git+file, hg+file, hg+http, hg+https, hg+ssh, hg+static-http, svn+ssh, svn+http, svn+https, svn+svn, svn+file).
+ git checkout 3d8a56298c71a67dedb0472f94e3746d04ddd117 $'sympy/sets/tests/test_fancysets.py\r'
error: pathspec 'sympy/sets/tests/test_fancysets.py?' did not match any file(s) known to git
+ git apply -v -
Checking patch sympy/sets/tests/test_fancysets.py...
error: while searching for:
    assert Range(-oo, 1, -1) == empty?
    assert Range(1, oo, -1) == empty?
    assert Range(1, -oo, 1) == empty?
    raises(ValueError, lambda: Range(1, 4, oo))?
    raises(ValueError, lambda: Range(-oo, oo))?
    raises(ValueError, lambda: Range(oo, -oo, -1))?
    raises(ValueError, lambda: Range(-oo, oo, 2))?
    raises(ValueError, lambda: Range(0, pi, 1))?
    raises(ValueError, lambda: Range(1, 10, 0))?
?
    assert 5 in Range(0, oo, 5)?
    assert -5 in Range(-oo, 0, 5)?

error: patch failed: sympy/sets/tests/test_fancysets.py:189
error: sympy/sets/tests/test_fancysets.py: patch does not apply
+ : '>>>>> Start Test Output'
+ PYTHONWARNINGS=ignore::UserWarning,ignore::SyntaxWarning
+ bin/test -C --verbose $'sympy/sets/tests/test_fancysets.py\r'
Traceback (most recent call last):
  File "/testbed/sympy/__init__.py", line 19, in <module>
    import mpmath
ModuleNotFoundError: No module named 'mpmath'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/testbed/bin/test", line 105, in <module>
    import sympy
  File "/testbed/sympy/__init__.py", line 21, in <module>
    raise ImportError("SymPy now depends on mpmath as an external library. "
ImportError: SymPy now depends on mpmath as an external library. See https://docs.sympy.org/latest/install.html#mpmath for more information.
+ : '>>>>> End Test Output'
+ git checkout 3d8a56298c71a67dedb0472f94e3746d04ddd117 $'sympy/sets/tests/test_fancysets.py\r'
error: pathspec 'sympy/sets/tests/test_fancysets.py?' did not match any file(s) known to git
